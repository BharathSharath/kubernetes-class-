kubectl get ns

kubectl create ns finance

ubectl get ns

openssl genrsa -out anshu.key 2048

ls

openssl req -new -key anshu.key -out john.csr -subj "/CN=anshu/O=finance"

ls

cp /etc/kubernetes/pki/ca.key .

sudo cp /etc/kubernetes/pki/ca.key .

ls

sudo cp /etc/kubernetes/pki/ca.crt .

ls
 
sudo openssl x509 -req -in anshu.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out anshu.crt -days=365
 
cp ~/.kube/config john.kubeconfig

ls

vi john.kubeconfig

    server: https://172.31.18.192:6443
  name: kubernetes
contexts:
- context:
    cluster: kubernetes
    user: anshu
    namespace: finance
  name: anshu-kubernetes
current-context: anshu-kubernetes
kind: Config
preferences: {}
users:
- name: anshu
  user:



cat anshu.crt | base64

cat anshu.crt | base64 -w0

vi anshu.kubeconfig

cat anshu.key | base64 -w0

vi anshu.kubeconfig

kubectl create role anshu-finance --verb=get,list --resource=pods --namespace finance

 kubectl -n finance get role anshu-finance -o yaml

kubectl create rolebinding anshu-finance-rolebinding --role=anshu-finance --user=anshu --namespace=finance

 kubectl -n finance get rolebinding anshu-finance-rolebinding -o yaml

kubectl -n finance edit role anshu-finance -o yaml

 kubectl --kubeconfig anshu.kubeconfig get pods



 Now you can share the kubeconfig file and access your cluster externally 


##############################################################################################################################################################

kubectl -n finance edit role anshu-finance -o yaml


#
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2023-01-22T08:41:33Z"
  name: anshu-finance
  namespace: finance
  resourceVersion: "7279"
  uid: 534bbb4e-267a-493e-983f-e2ea4ba98147
rules:
- apiGroups:
  - '*'
  resources:
  - pods
  - deployments
  - replicasets
  - namespaces
  verbs:
  - get
  - list
  - create
  - edit



 kubectl --kubeconfig anshu.kubeconfig get pods

kubectl --kubeconfig anshu.kubeconfig get deploy

kubectl --kubeconfig anshu.kubeconfig run anshu --image=nginx

kubectl --kubeconfig anshu.kubeconfig create deployment anshu1 --image=nginx --replicas=5
